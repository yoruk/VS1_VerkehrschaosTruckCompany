package verkehrschaos;


/**
* verkehrschaos/_TruckCompanyStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from verkehrschaos.idl
* Freitag, 17. April 2015 12:12 Uhr MESZ
*/

public class _TruckCompanyStub extends org.omg.CORBA.portable.ObjectImpl implements verkehrschaos.TruckCompany
{


  /* Gibt den Namen der Spedition. */
  public String getName ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getName", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getName (        );
            } finally {
                _releaseReply ($in);
            }
  } // getName


  /* Fuegt der Spedition einen LKW hinzu.
       * Damit ist die Spedition die dem LKW zugeordnete Spedition:
       */
  public void addTruck (verkehrschaos.Truck truck)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addTruck", true);
                verkehrschaos.TruckHelper.write ($out, truck);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addTruck (truck        );
            } finally {
                _releaseReply ($in);
            }
  } // addTruck


  /* Entfernt den LKW von der Spedition
       */
  public void removeTruck (verkehrschaos.Truck truck)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeTruck", true);
                verkehrschaos.TruckHelper.write ($out, truck);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                removeTruck (truck        );
            } finally {
                _releaseReply ($in);
            }
  } // removeTruck


  /* Liefert eine Liste aller verfuegbaren LKWs.
       * Es duerfen nur die LKWs enthalten sein, die einen Fahrauftrag uebernehmen koennen.
       * Rueckgabewert soll die Anzahl dieser LKWs angeben.
       */
  public int getTrucks (verkehrschaos.TTruckListHolder trucks)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getTrucks", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                trucks.value = verkehrschaos.TTruckListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getTrucks (trucks        );
            } finally {
                _releaseReply ($in);
            }
  } // getTrucks


  /* LKW hat Spedition verlassen.
       * Spedition ist nicht mehr fuer den Laster zustaendig, muss aus Liste der Laster entfernt werden.
       * Wird von Streets aufgerufen */
  public void leave (verkehrschaos.Truck truck)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("leave", true);
                verkehrschaos.TruckHelper.write ($out, truck);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                leave (truck        );
            } finally {
                _releaseReply ($in);
            }
  } // leave


  /* LKW wird angekuendigt.
       * Eine andere Spedition hat einen Laster auf den Weg zu dieser Spedition gebracht.
       * Spedition soll den LKW sofort durch Aufruf von Truck.setCompany uebernehmen.
       * Wird von Streets aufgerufen */
  public void advise (verkehrschaos.Truck truck)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("advise", true);
                verkehrschaos.TruckHelper.write ($out, truck);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                advise (truck        );
            } finally {
                _releaseReply ($in);
            }
  } // advise


  /* LKW ist im Ziel angekommen.
       * Steht nun fuer neue Fahrten zur Verfuegung.
       * Wird von Streets aufgerufen */
  public void arrive (verkehrschaos.Truck truck)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("arrive", true);
                verkehrschaos.TruckHelper.write ($out, truck);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                arrive (truck        );
            } finally {
                _releaseReply ($in);
            }
  } // arrive


  /*
       * Stilllegung der Spedition (TruckCompany Anwendung wird beendet).
       * Wird von der Steueranwendung (Client) aufgerufen.
       * Legt auch alle zugeordneten LKWs still.
       * Beenden der Anwendung durch Aufruf von orb.shutdown(true).
       * Nach orb.shutdown kleine Pause einlegen (0.5 sec) um Exception zu vermeiden.
       */
  public void putOutOfService ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("putOutOfService", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                putOutOfService (        );
            } finally {
                _releaseReply ($in);
            }
  } // putOutOfService

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:verkehrschaos/TruckCompany:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _TruckCompanyStub
