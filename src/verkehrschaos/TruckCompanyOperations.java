package verkehrschaos;


/**
* verkehrschaos/TruckCompanyOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from verkehrschaos.idl
* Freitag, 17. April 2015 12:12 Uhr MESZ
*/

public interface TruckCompanyOperations 
{

  /* Gibt den Namen der Spedition. */
  String getName ();

  /* Fuegt der Spedition einen LKW hinzu.
       * Damit ist die Spedition die dem LKW zugeordnete Spedition:
       */
  void addTruck (verkehrschaos.Truck truck);

  /* Entfernt den LKW von der Spedition
       */
  void removeTruck (verkehrschaos.Truck truck);

  /* Liefert eine Liste aller verfuegbaren LKWs.
       * Es duerfen nur die LKWs enthalten sein, die einen Fahrauftrag uebernehmen koennen.
       * Rueckgabewert soll die Anzahl dieser LKWs angeben.
       */
  int getTrucks (verkehrschaos.TTruckListHolder trucks);

  /* LKW hat Spedition verlassen.
       * Spedition ist nicht mehr fuer den Laster zustaendig, muss aus Liste der Laster entfernt werden.
       * Wird von Streets aufgerufen */
  void leave (verkehrschaos.Truck truck);

  /* LKW wird angekuendigt.
       * Eine andere Spedition hat einen Laster auf den Weg zu dieser Spedition gebracht.
       * Spedition soll den LKW sofort durch Aufruf von Truck.setCompany uebernehmen.
       * Wird von Streets aufgerufen */
  void advise (verkehrschaos.Truck truck);

  /* LKW ist im Ziel angekommen.
       * Steht nun fuer neue Fahrten zur Verfuegung.
       * Wird von Streets aufgerufen */
  void arrive (verkehrschaos.Truck truck);

  /*
       * Stilllegung der Spedition (TruckCompany Anwendung wird beendet).
       * Wird von der Steueranwendung (Client) aufgerufen.
       * Legt auch alle zugeordneten LKWs still.
       * Beenden der Anwendung durch Aufruf von orb.shutdown(true).
       * Nach orb.shutdown kleine Pause einlegen (0.5 sec) um Exception zu vermeiden.
       */
  void putOutOfService ();
} // interface TruckCompanyOperations
