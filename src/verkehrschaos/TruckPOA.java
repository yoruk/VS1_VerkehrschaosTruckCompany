package verkehrschaos;


/**
* verkehrschaos/TruckPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from verkehrschaos.idl
* Freitag, 17. April 2015 12:12 Uhr MESZ
*/

public abstract class TruckPOA extends org.omg.PortableServer.Servant
 implements verkehrschaos.TruckOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getName", new java.lang.Integer (0));
    _methods.put ("getCompany", new java.lang.Integer (1));
    _methods.put ("setCompany", new java.lang.Integer (2));
    _methods.put ("setCoordinate", new java.lang.Integer (3));
    _methods.put ("putOutOfService", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /* Gibt den Namen des LKWs. */
       case 0:  // verkehrschaos/Truck/getName
       {
         String $result = null;
         $result = this.getName ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }


  /* Gibt die zugeordnete Spedition */
       case 1:  // verkehrschaos/Truck/getCompany
       {
         verkehrschaos.TruckCompany $result = null;
         $result = this.getCompany ();
         out = $rh.createReply();
         verkehrschaos.TruckCompanyHelper.write (out, $result);
         break;
       }


  /* Neue Zuordnung einer Spedition.
       * Wird von der zustaendigen Spedition aufgerufen. 
       * Zu Debug-Zwecken soll der Name der neuen Spedition auf der Konsole ausgegeben werden. 
       */
       case 2:  // verkehrschaos/Truck/setCompany
       {
         verkehrschaos.TruckCompany company = verkehrschaos.TruckCompanyHelper.read (in);
         this.setCompany (company);
         out = $rh.createReply();
         break;
       }


  /* Informiert den LKW waehrend einer Fahrt ueber die aktuelle Position.
       * Position kann auf der Konsole ausgegeben werden.
       * Wird von Streets aufgerufen.
       */
       case 3:  // verkehrschaos/Truck/setCoordinate
       {
         double x = in.read_double ();
         double y = in.read_double ();
         this.setCoordinate (x, y);
         out = $rh.createReply();
         break;
       }


  /*
       * Stilllegung des LKWs (LKW Anwendung wird beendet).
       * Wird z. B. von zugeordneter Spedition aufgerufen, wenn diese still gelegt wird
       * oder von der Steueranwendung (Client).
       * Beenden der Anwendung durch Aufruf von orb.shutdown(true).
       * Nach orb.shutdown kleine Pause einlegen (0.5 sec) um Exception zu vermeiden.
       */
       case 4:  // verkehrschaos/Truck/putOutOfService
       {
         this.putOutOfService ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:verkehrschaos/Truck:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Truck _this() 
  {
    return TruckHelper.narrow(
    super._this_object());
  }

  public Truck _this(org.omg.CORBA.ORB orb) 
  {
    return TruckHelper.narrow(
    super._this_object(orb));
  }


} // class TruckPOA
